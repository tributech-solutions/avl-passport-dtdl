{
  "openapi": "3.0.1",
  "info": {
    "title": "AVLPassport-API",
    "description": "GatewayService to Tributech Node.",
    "version": "v1"
  },
  "paths": {
    "/configuration": {
      "get": {
        "tags": [
          "Configuration"
        ],
        "summary": "Get application configuration.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/configuration/company-logo/custom": {
      "get": {
        "tags": [
          "Configuration"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/datamodels/{dataModelId}": {
      "put": {
        "tags": [
          "DataModels"
        ],
        "summary": "Create or Update a Data Model",
        "description": "Id and Data Model Name must be unique",
        "parameters": [
          {
            "name": "dataModelId",
            "in": "path",
            "description": "Data Model Identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "New Data Model Values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDataModelModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDataModelModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDataModelModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "DataModels"
        ],
        "summary": "Get a Data Model",
        "parameters": [
          {
            "name": "dataModelId",
            "in": "path",
            "description": "Data Model Identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DataModelModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataModelModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataModelModel"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/datamodels": {
      "get": {
        "tags": [
          "DataModels"
        ],
        "summary": "Get a list of all Data Models",
        "parameters": [
          {
            "name": "ProductCategoryId",
            "in": "query",
            "description": "Filter the list of Data Models by Product Category",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "ReviewStatus",
            "in": "query",
            "description": "Filter the list of Data Models by ReviewStatus (empty or null disables the filter)",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/DataModelReviewStatus"
              }
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DataModelListItemModelPaginatedList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataModelListItemModelPaginatedList"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataModelListItemModelPaginatedList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/datamodels/{dataModelId}/dtms/{productDiscriminator}": {
      "put": {
        "tags": [
          "DataModels"
        ],
        "summary": "Create or Update a Digital Twin Model (DTM) for a Data Model",
        "description": "Only DTM which do not overlap with System Models are allowed !",
        "parameters": [
          {
            "name": "dataModelId",
            "in": "path",
            "description": "Data Model Identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "productDiscriminator",
            "in": "path",
            "description": "Delete a specific type of Product Model Digital Twin Model",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProductDiscriminator"
            }
          }
        ],
        "requestBody": {
          "description": "Digital Twin Model which should be created and associated with the Data Model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InterfaceDescriptionModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InterfaceDescriptionModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InterfaceDescriptionModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DataModels"
        ],
        "summary": "Delete a list of DTM assigned the DataModel by dtmi which has not been approved",
        "description": "Delete a DTM associated with the Data Model which has not been approved yet",
        "parameters": [
          {
            "name": "dataModelId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "productDiscriminator",
            "in": "path",
            "description": "Delete a specific type of Product Model Digital Twin Model",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProductDiscriminator"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "DataModels"
        ],
        "summary": "Get the DTMI's for the Digital Twin Models associated  with a model",
        "parameters": [
          {
            "name": "dataModelId",
            "in": "path",
            "description": "Data Model Identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "productDiscriminator",
            "in": "path",
            "description": "Delete a specific type of Product Model Digital Twin Model",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProductDiscriminator"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DataModelDtmInformation"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataModelDtmInformation"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataModelDtmInformation"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/datamodels/{dataModelId}/dtms/{productDiscriminator}/approve": {
      "post": {
        "tags": [
          "DataModels"
        ],
        "summary": "Approve the assigned DTMI's",
        "description": "Approving Digital Twin Models makes them immutable. This action cannot be reverted",
        "parameters": [
          {
            "name": "dataModelId",
            "in": "path",
            "description": "Data Model Identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "productDiscriminator",
            "in": "path",
            "description": "Delete a specific type of Product Model Digital Twin Model",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProductDiscriminator"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/datamodels/{dataModelId}/validation-groups/{validationGroupId}": {
      "put": {
        "tags": [
          "DataModels"
        ],
        "summary": "Add a validation Group",
        "parameters": [
          {
            "name": "dataModelId",
            "in": "path",
            "description": "Data Model Identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "validationGroupId",
            "in": "path",
            "description": "Validation Group Identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Validation Group Model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidationGroupUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidationGroupUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ValidationGroupUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "DataModels"
        ],
        "summary": "Get a list of all Validation Groups",
        "parameters": [
          {
            "name": "dataModelId",
            "in": "path",
            "description": "Data Model Identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "validationGroupId",
            "in": "path",
            "description": "Validation Group Identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationGroupModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationGroupModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationGroupModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/datamodels/{dataModelId}/validation-groups/{validationGroupId}/approve": {
      "post": {
        "tags": [
          "DataModels"
        ],
        "summary": "Approve a Validation Group",
        "description": "This action makes Validation Rules of the Data Model immutable. Validation Rules needs to be unlocked to be mutable again.",
        "parameters": [
          {
            "name": "dataModelId",
            "in": "path",
            "description": "Data Model Identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "validationGroupId",
            "in": "path",
            "description": "Validation Group Identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/datamodels/{dataModelId}/validation-groups/{validationGroupId}/unlock": {
      "post": {
        "tags": [
          "DataModels"
        ],
        "summary": "Unlocks a specific approved Validation Group",
        "description": "Unlocking Validation Groups will make them mutable again but has no impact on past Digital Twin Instances (DTI)",
        "parameters": [
          {
            "name": "dataModelId",
            "in": "path",
            "description": "Data Model Identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "validationGroupId",
            "in": "path",
            "description": "Validation Group Identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/datamodels/{dataModelId}/validation-groups": {
      "get": {
        "tags": [
          "DataModels"
        ],
        "summary": "Get a list of all Validation Groups",
        "parameters": [
          {
            "name": "dataModelId",
            "in": "path",
            "description": "Data Model Identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidationGroupModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidationGroupModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidationGroupModel"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/datamodels/{dataModelId}/validation-groups/unlock": {
      "post": {
        "tags": [
          "DataModels"
        ],
        "summary": "Unlocks a set of approved validation rules",
        "description": "Unlocking Validation Groups will make them mutable again but has no impact on past Digital Twin Instances (DTI)",
        "parameters": [
          {
            "name": "dataModelId",
            "in": "path",
            "description": "Data Model Identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/datamodels/{dataModelId}/data-views/configurations/{configurationViewId}": {
      "put": {
        "tags": [
          "DataModels"
        ],
        "summary": "Create or Update a Configuration Data View for a Data Model",
        "parameters": [
          {
            "name": "dataModelId",
            "in": "path",
            "description": "Data Model Identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "configurationViewId",
            "in": "path",
            "description": "Configuration Data View Identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Configuration Data View",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TwinGraphModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TwinGraphModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TwinGraphModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "DataModels"
        ],
        "summary": "Get a Configuration Data Views for a Data Model",
        "parameters": [
          {
            "name": "dataModelId",
            "in": "path",
            "description": "Data Model Identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "configurationViewId",
            "in": "path",
            "description": "Configuration Data View Identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DataViewConfigurationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataViewConfigurationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataViewConfigurationModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/datamodels/{dataModelId}/data-views/configurations/{configurationViewId}/approve": {
      "post": {
        "tags": [
          "DataModels"
        ],
        "summary": "Approve a Configuration Data View for a specific Data Model",
        "parameters": [
          {
            "name": "dataModelId",
            "in": "path",
            "description": "Data Model Identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "configurationViewId",
            "in": "path",
            "description": "Configuration Data View Identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/datamodels/{dataModelId}/data-views/configurations/{configurationViewId}/unlock": {
      "post": {
        "tags": [
          "DataModels"
        ],
        "summary": "Unlock an approved Configuration Data View for a specific Data Model",
        "parameters": [
          {
            "name": "dataModelId",
            "in": "path",
            "description": "Data Model Identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "configurationViewId",
            "in": "path",
            "description": "Configuration Data View Identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/datamodels/{dataModelId}/data-views/configurations": {
      "get": {
        "tags": [
          "DataModels"
        ],
        "summary": "Get a list of all Configuration Data Views for a Data Model",
        "parameters": [
          {
            "name": "dataModelId",
            "in": "path",
            "description": "Data Model Identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataViewConfigurationModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataViewConfigurationModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataViewConfigurationModel"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/datamodels/{dataModelId}/data-views/configurations/unlock": {
      "post": {
        "tags": [
          "DataModels"
        ],
        "summary": "Unlocks all approved Configuration Data Views for a Data Model",
        "parameters": [
          {
            "name": "dataModelId",
            "in": "path",
            "description": "Data Model Identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/datamodels/{dataModelId}/data-views/passports/{passportViewId}": {
      "put": {
        "tags": [
          "DataModels"
        ],
        "summary": "Create or Update a Passport Data View for a Data Model",
        "parameters": [
          {
            "name": "dataModelId",
            "in": "path",
            "description": "Data Model Identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "passportViewId",
            "in": "path",
            "description": "Passport Data View Identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Passport Data View",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDataViewPassportModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDataViewPassportModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDataViewPassportModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "DataModels"
        ],
        "summary": "Get a Passports Data View for a Data Model",
        "parameters": [
          {
            "name": "dataModelId",
            "in": "path",
            "description": "Data Model Identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "passportViewId",
            "in": "path",
            "description": "Data View Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DataViewConfigurationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataViewConfigurationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataViewConfigurationModel"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/datamodels/{dataModelId}/data-views/passports/{passportViewId}/approve": {
      "post": {
        "tags": [
          "DataModels"
        ],
        "summary": "Approve a Passport Data View for a specific Data Model",
        "parameters": [
          {
            "name": "dataModelId",
            "in": "path",
            "description": "Data Model Identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "passportViewId",
            "in": "path",
            "description": "Data View Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/datamodels/{dataModelId}/data-views/passports/{passportViewId}/unlock": {
      "post": {
        "tags": [
          "DataModels"
        ],
        "summary": "Unlock an approved Passport Data View for a specific Data Model",
        "parameters": [
          {
            "name": "dataModelId",
            "in": "path",
            "description": "Data Model Identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "passportViewId",
            "in": "path",
            "description": "Data View Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/datamodels/{dataModelId}/data-views/passports": {
      "get": {
        "tags": [
          "DataModels"
        ],
        "summary": "Get all Passports Data View for a Data Model",
        "parameters": [
          {
            "name": "dataModelId",
            "in": "path",
            "description": "Data Model Identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataViewConfigurationModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataViewConfigurationModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataViewConfigurationModel"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/datamodels/{dataModelId}/data-views/passports/unlock": {
      "post": {
        "tags": [
          "DataModels"
        ],
        "summary": "Unlocks all approved Configuration Data Views for a Data Model",
        "parameters": [
          {
            "name": "dataModelId",
            "in": "path",
            "description": "Data Model Identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/datamodels/{dataModelId}/data-views/passports/unlock": {
      "post": {
        "tags": [
          "DataModels"
        ],
        "summary": "Unlock all approved Passport Data View for a specific Data Model",
        "parameters": [
          {
            "name": "dataModelId",
            "in": "path",
            "description": "Data Model Identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/datamodels/{dataModelId}/data-views": {
      "get": {
        "tags": [
          "DataModels"
        ],
        "summary": "Get Compact representation of common properties of all defined Views for a Data Model",
        "parameters": [
          {
            "name": "dataModelId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataViewCompactModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataViewCompactModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataViewCompactModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/datamodels/{dataModelId}/data-views/unlock": {
      "post": {
        "tags": [
          "DataModels"
        ],
        "summary": "Unlock all approved Data View for Data Model",
        "description": "Unlocking all Data Views for a Data Model will make them mutable again but has no impact on past Digital Twin Instances (DTI)",
        "parameters": [
          {
            "name": "dataModelId",
            "in": "path",
            "description": "Data Model Identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/digitaltwinmodels": {
      "get": {
        "tags": [
          "DigitalTwinModels"
        ],
        "summary": "Get a Digital Twin Model (DTM) Interface Descriptions",
        "parameters": [
          {
            "name": "Dtmis",
            "in": "query",
            "description": "Digital Twin Model Identifier",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Digital Twin Model Identifier"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/InterfaceDescriptionV2PaginatedList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InterfaceDescriptionV2PaginatedList"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InterfaceDescriptionV2PaginatedList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/digitaltwinmodels/dtmis": {
      "get": {
        "tags": [
          "DigitalTwinModels"
        ],
        "summary": "Get a list of Digital Twin Model Identifiers (DTMI's)",
        "parameters": [
          {
            "name": "PartialDtmis",
            "in": "query",
            "description": "Enable Search for Digital Twin Model Identifier (DTMI) multiple Versions etc",
            "schema": {
              "type": "string",
              "description": "Enable Search for Digital Twin Model Identifier (DTMI) multiple Versions etc",
              "nullable": true
            }
          },
          {
            "name": "SystemDtmTypes",
            "in": "query",
            "description": "Filter for specific DTM Types (null or empty disables the filter)",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SystemDtmTypes"
              },
              "description": "Filter for specific DTM Types (null or empty disables the filter)",
              "nullable": true
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringPaginatedList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringPaginatedList"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringPaginatedList"
                }
              }
            }
          }
        }
      }
    },
    "/groups": {
      "post": {
        "tags": [
          "Groups"
        ],
        "summary": "Create new group.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateGroupCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateGroupCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateGroupCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Groups"
        ],
        "summary": "Update existing group.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateGroupCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateGroupCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateGroupCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "Get groups (as paginated list order by group name).",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GroupDtoPaginatedList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupDtoPaginatedList"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupDtoPaginatedList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/groups/{id}": {
      "delete": {
        "tags": [
          "Groups"
        ],
        "summary": "Delete group.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the group.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/media/upload": {
      "post": {
        "tags": [
          "Media"
        ],
        "summary": "Uploads a media asset such as a pdf, csv document, or svg file.",
        "parameters": [
          {
            "name": "public",
            "in": "query",
            "description": ">Flag to mark the media as either public or not. Defaults to false.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "description": "The file to be uploaded. The file must not exceed 10 MB.",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GuidIdentifierResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GuidIdentifierResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GuidIdentifierResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/media/download/{id}": {
      "get": {
        "tags": [
          "Media"
        ],
        "summary": "Downloads a private media asset by its id (for authenticated users).",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the media asset.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/media/download/{id}/public": {
      "get": {
        "tags": [
          "Media"
        ],
        "summary": "Downloads a public media asset by its id (anonymous access allowed).",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the media asset.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/productcategories/{productCategoryId}": {
      "put": {
        "tags": [
          "ProductCategories"
        ],
        "summary": "Create or Update a Product Category",
        "parameters": [
          {
            "name": "productCategoryId",
            "in": "path",
            "description": "Product Category Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Product Category AVL.PassportApi.Application.ProductCategories.Commands.Update.UpdateProductCategoryModel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductCategoryModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductCategoryModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductCategoryModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "ProductCategories"
        ],
        "summary": "Get a Product Category by Id",
        "parameters": [
          {
            "name": "productCategoryId",
            "in": "path",
            "description": "Product Category Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductCategoryModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductCategoryModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductCategoryModel"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/productcategories": {
      "get": {
        "tags": [
          "ProductCategories"
        ],
        "summary": "List all Product Categories",
        "parameters": [
          {
            "name": "PartialName",
            "in": "query",
            "description": "Product Category Filter based on Name (ignored if null or empty)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductCategoryModelPaginatedList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductCategoryModelPaginatedList"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductCategoryModelPaginatedList"
                }
              }
            }
          }
        }
      }
    },
    "/productdesign/default": {
      "get": {
        "tags": [
          "ProductDesign"
        ],
        "summary": "Get the default Product Design",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProductDesign"
        ],
        "summary": "Update an existing new default product design",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "CompanyLogo": {
                    "type": "string",
                    "format": "binary"
                  },
                  "CompanyLogoMd5CheckSum": {
                    "type": "string"
                  },
                  "PrimaryColorHexCode": {
                    "type": "string"
                  },
                  "SecondaryColorHexCode": {
                    "type": "string"
                  },
                  "HeaderTextColorHexCode": {
                    "type": "string"
                  },
                  "TextComponentColorHexCode": {
                    "type": "string"
                  },
                  "ProductPassportBadgeColorHexCode": {
                    "type": "string"
                  },
                  "PrimaryGradient": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "CompanyLogo": {
                  "style": "form"
                },
                "CompanyLogoMd5CheckSum": {
                  "style": "form"
                },
                "PrimaryColorHexCode": {
                  "style": "form"
                },
                "SecondaryColorHexCode": {
                  "style": "form"
                },
                "HeaderTextColorHexCode": {
                  "style": "form"
                },
                "TextComponentColorHexCode": {
                  "style": "form"
                },
                "ProductPassportBadgeColorHexCode": {
                  "style": "form"
                },
                "PrimaryGradient": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/productdesign/custom": {
      "get": {
        "tags": [
          "ProductDesign"
        ],
        "summary": "Get the custom Product Design",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProductDesign"
        ],
        "summary": "Update or Create a custom product design",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "CompanyLogo": {
                    "type": "string",
                    "format": "binary"
                  },
                  "CompanyLogoMd5CheckSum": {
                    "type": "string"
                  },
                  "PrimaryColorHexCode": {
                    "type": "string"
                  },
                  "SecondaryColorHexCode": {
                    "type": "string"
                  },
                  "HeaderTextColorHexCode": {
                    "type": "string"
                  },
                  "TextComponentColorHexCode": {
                    "type": "string"
                  },
                  "ProductPassportBadgeColorHexCode": {
                    "type": "string"
                  },
                  "PrimaryGradient": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "CompanyLogo": {
                  "style": "form"
                },
                "CompanyLogoMd5CheckSum": {
                  "style": "form"
                },
                "PrimaryColorHexCode": {
                  "style": "form"
                },
                "SecondaryColorHexCode": {
                  "style": "form"
                },
                "HeaderTextColorHexCode": {
                  "style": "form"
                },
                "TextComponentColorHexCode": {
                  "style": "form"
                },
                "ProductPassportBadgeColorHexCode": {
                  "style": "form"
                },
                "PrimaryGradient": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProductDesign"
        ],
        "summary": "Delete the custom Product Design",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/productdesign/current": {
      "get": {
        "tags": [
          "ProductDesign"
        ],
        "summary": "Get the current Product Design (custom design if available else default)",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/productmodels": {
      "get": {
        "tags": [
          "ProductModels"
        ],
        "summary": "Get a List of Product Models",
        "parameters": [
          {
            "name": "ProductCategoryId",
            "in": "query",
            "description": "Product Category Identifier (optional)",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "DataModelId",
            "in": "query",
            "description": "Data Model Identifier(optional)",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "ValidationStatus",
            "in": "query",
            "description": "Validation Status Filter(optional)",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ProductModelValidationStatus"
              }
            }
          },
          {
            "name": "ProofStatus",
            "in": "query",
            "description": "Proof Status Filter(optional)",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ProofStatus"
              }
            }
          },
          {
            "name": "IsPublicAvailable",
            "in": "query",
            "description": "Only Public available Product Models if true else Private Product Models (null ignore filter)",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ReviewStatus",
            "in": "query",
            "description": "Review Status Filter (empty or null disables the filter)",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ProductModelReviewStatus"
              }
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductModelListItemModelPaginatedList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductModelListItemModelPaginatedList"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductModelListItemModelPaginatedList"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProductModels"
        ],
        "summary": "Create or Update a Product Model Digital Model Instance",
        "description": "Only dtmi:avl:product:model:base;1 children are accepted as MetadataModels!",
        "requestBody": {
          "description": "Product Model Graph Instance",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TwinGraphModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TwinGraphModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TwinGraphModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/productmodels/datamodels/{datamodelId}": {
      "get": {
        "tags": [
          "ProductModels"
        ],
        "summary": "Get a DataView Configuration representation for a Product Model from a Data Model (Initial Model with default values)",
        "parameters": [
          {
            "name": "datamodelId",
            "in": "path",
            "description": "Data Model Identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductConfigurationViewModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductConfigurationViewModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductConfigurationViewModel"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/productmodels/{productModelId}": {
      "get": {
        "tags": [
          "ProductModels"
        ],
        "summary": "Get a DataView Configuration representation for a Product Model",
        "parameters": [
          {
            "name": "productModelId",
            "in": "path",
            "description": "Product Model Instance Identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DataViewConfigurationInstanceViewModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataViewConfigurationInstanceViewModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataViewConfigurationInstanceViewModel"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/productmodels/{productModelId}/ready-for-review": {
      "post": {
        "tags": [
          "ProductModels"
        ],
        "summary": "Set a Product Model in the Status Ready for Review",
        "parameters": [
          {
            "name": "productModelId",
            "in": "path",
            "description": "Product Model Instance Identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/productmodels/{productModelId}/unlock": {
      "post": {
        "tags": [
          "ProductModels"
        ],
        "summary": "Reset an approved Product Model to a Draft",
        "description": "Unlocking a Product Model will make it mutable again but has no impact on past Digital Twin Instances (DTI) operations (calculations etc)",
        "parameters": [
          {
            "name": "productModelId",
            "in": "path",
            "description": "Product Model Instance Identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/productmodels/{productModelId}/notarization/execute": {
      "post": {
        "tags": [
          "ProductModels"
        ],
        "summary": "Notarization of a Product Model",
        "parameters": [
          {
            "name": "productModelId",
            "in": "path",
            "description": "Product Model Instance Identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/productmodels/{productModelId}/notarization/re-trigger": {
      "post": {
        "tags": [
          "ProductModels"
        ],
        "summary": "Trigger a Notarization of a Product Model again",
        "parameters": [
          {
            "name": "productModelId",
            "in": "path",
            "description": "Product Model Instance Identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/productmodels/{productModelId}/notarization/status": {
      "get": {
        "tags": [
          "ProductModels"
        ],
        "summary": "Get the Product Model notarization status",
        "parameters": [
          {
            "name": "productModelId",
            "in": "path",
            "description": "Product Model Instance Identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotarizationInformationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotarizationInformationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotarizationInformationModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/productmodels/{productModelId}/notarization/verify": {
      "post": {
        "tags": [
          "ProductModels"
        ],
        "summary": "Product Model verify notarization",
        "parameters": [
          {
            "name": "productModelId",
            "in": "path",
            "description": "Product Model Instance Identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotarizationVerificationStatus"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotarizationVerificationStatus"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotarizationVerificationStatus"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/productmodels/{productModelId}/public-access": {
      "post": {
        "tags": [
          "ProductModels"
        ],
        "summary": "Set a Product Model Public access enabled/disabled",
        "parameters": [
          {
            "name": "productModelId",
            "in": "path",
            "description": "Product Model Instance Identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Public Access Model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductPublicAccessModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductPublicAccessModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductPublicAccessModel"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/productpassports": {
      "get": {
        "tags": [
          "ProductPassports"
        ],
        "summary": "Get a List of Product Passports",
        "parameters": [
          {
            "name": "DataModelId",
            "in": "query",
            "description": "Filter for a DataModel or Not (optional)",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "ValidationStatus",
            "in": "query",
            "description": "Validation Status Filter (optional)",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ProductPassportValidationStatus"
              }
            }
          },
          {
            "name": "ProofStatus",
            "in": "query",
            "description": "Proof Status Filter (optional)",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ProofStatus"
              }
            }
          },
          {
            "name": "IsPublicAvailable",
            "in": "query",
            "description": "Only Public available Product Models if true else Private Product Models (optional)",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsQrCodeAvailable",
            "in": "query",
            "description": "A QR Code is available (optional)",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ProductCategoryId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "ReviewStatus",
            "in": "query",
            "description": "Review Status Filter (empty or null disables the filter)",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ProductPassportReviewStatus"
              }
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductPassportListItemModelPaginatedList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductPassportListItemModelPaginatedList"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductPassportListItemModelPaginatedList"
                }
              }
            }
          }
        }
      }
    },
    "/productpassports/datamodels/{datamodelId}": {
      "get": {
        "tags": [
          "ProductPassports"
        ],
        "summary": "Get a DataView Configuration representation for a Product Passport from a Data Model (Initial Model with default values)",
        "parameters": [
          {
            "name": "datamodelId",
            "in": "path",
            "description": "Data Model Identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductConfigurationViewModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductConfigurationViewModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductConfigurationViewModel"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/productpassports/productmodels/{productmodelId}": {
      "put": {
        "tags": [
          "ProductPassports"
        ],
        "summary": "Create or Update a Product Passport Digital Model Instance",
        "description": "Only dtmi:avl:product:passport:base;1 children are accepted as MetadataModels!",
        "parameters": [
          {
            "name": "productmodelId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Product Passport Instance",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TwinGraphModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TwinGraphModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TwinGraphModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/productpassports/{productPassportId}": {
      "get": {
        "tags": [
          "ProductPassports"
        ],
        "summary": "Get the DataView Passport Private for a Product Passport",
        "parameters": [
          {
            "name": "productPassportId",
            "in": "path",
            "description": "Product Passport Instance Identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DataViewPassportInstanceViewModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataViewPassportInstanceViewModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataViewPassportInstanceViewModel"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/productpassports/{productPassportId}/public": {
      "get": {
        "tags": [
          "ProductPassports"
        ],
        "summary": "Get a DataView Passport of type Public for a Product Passport",
        "parameters": [
          {
            "name": "productPassportId",
            "in": "path",
            "description": "Product Passport Instance Identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DataViewPassportInstanceViewModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataViewPassportInstanceViewModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataViewPassportInstanceViewModel"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/productpassports/{productPassportId}/life-cycle": {
      "put": {
        "tags": [
          "ProductPassports"
        ],
        "summary": "Update the LifeCycle Status of a Product Passport",
        "parameters": [
          {
            "name": "productPassportId",
            "in": "path",
            "description": "Product Passport Instance Identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LifeCycleUpdateRequestModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LifeCycleUpdateRequestModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LifeCycleUpdateRequestModel"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/productpassports/{productPassportId}/unlock": {
      "post": {
        "tags": [
          "ProductPassports"
        ],
        "summary": "Reset an approved Product Passport to a Draft",
        "description": "Unlocking a Product Passport will make it mutable again but has no impact on past Digital Twin Instances (DTI) operations (calculations etc)",
        "parameters": [
          {
            "name": "productPassportId",
            "in": "path",
            "description": "Product Passport Instance Identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/productpassports/{productPassportId}/place-on-market": {
      "post": {
        "tags": [
          "ProductPassports"
        ],
        "summary": "Place a Product Passport on market",
        "parameters": [
          {
            "name": "productPassportId",
            "in": "path",
            "description": "Product Passport Instance Identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/productpassports/{productPassportId}/notarization/execute": {
      "post": {
        "tags": [
          "ProductPassports"
        ],
        "summary": "Notarization of a Product Passport",
        "parameters": [
          {
            "name": "productPassportId",
            "in": "path",
            "description": "Product Passport Instance Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/productpassports/{productPassportId}/notarization/re-trigger": {
      "post": {
        "tags": [
          "ProductPassports"
        ],
        "summary": "Trigger Notarization of a Product Passport",
        "parameters": [
          {
            "name": "productPassportId",
            "in": "path",
            "description": "Product Passport Instance Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/productpassports/{productPassportId}/notarization/status": {
      "get": {
        "tags": [
          "ProductPassports"
        ],
        "summary": "Get the Product Passport notarization status",
        "parameters": [
          {
            "name": "productPassportId",
            "in": "path",
            "description": "Product Passport Instance Identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotarizationInformationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotarizationInformationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotarizationInformationModel"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/productpassports/{productPassportId}/notarization/verify": {
      "post": {
        "tags": [
          "ProductPassports"
        ],
        "summary": "Product Passport verify notarization",
        "parameters": [
          {
            "name": "productPassportId",
            "in": "path",
            "description": "Product Passport Instance Identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotarizationVerificationStatus"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotarizationVerificationStatus"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotarizationVerificationStatus"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/productpassports/{productPassportId}/qr-code/data": {
      "get": {
        "tags": [
          "ProductPassports"
        ],
        "summary": "Get the Product Passport Qr-Code and technical information",
        "parameters": [
          {
            "name": "productPassportId",
            "in": "path",
            "description": "Product Passport Instance Identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductPassportQrCodeModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductPassportQrCodeModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductPassportQrCodeModel"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/productpassports/{productPassportId}/calculations/co2footprint": {
      "get": {
        "tags": [
          "ProductPassports"
        ],
        "summary": "Calculate the Co2 Footprint",
        "parameters": [
          {
            "name": "productPassportId",
            "in": "path",
            "description": "Product Passport Instance Identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductPassportCo2FootPrintCalculationPrivateModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductPassportCo2FootPrintCalculationPrivateModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductPassportCo2FootPrintCalculationPrivateModel"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/productpassports/{productPassportId}/calculations/co2footprint/public": {
      "get": {
        "tags": [
          "ProductPassports"
        ],
        "summary": "Calculate the Co2 Footprint  and return a PublicModel",
        "parameters": [
          {
            "name": "productPassportId",
            "in": "path",
            "description": "Product Passport Instance Identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductPassportCo2FootPrintCalculationPublicModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductPassportCo2FootPrintCalculationPublicModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductPassportCo2FootPrintCalculationPublicModel"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create new user.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GuidIdentifierResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GuidIdentifierResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GuidIdentifierResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update existing user.\r\nThe user id will be used to match the user.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get users (as paginated list order by username/email).",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserDtoPaginatedList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDtoPaginatedList"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDtoPaginatedList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}": {
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete user.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The id (uuid) of the user.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/reset-password": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Send user a reset password link via email.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The id (uuid) of the user.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/webhookcallback": {
      "post": {
        "tags": [
          "WebhookCallback"
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ArraySchemaDescriptionV2": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseSchemaSelfDescriptionV2"
          }
        ],
        "properties": {
          "elementSchema": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BaseSchemaSelfDescriptionV2"
              },
              {
                "$ref": "#/components/schemas/PrimitiveSchemaDescriptionV2"
              },
              {
                "$ref": "#/components/schemas/ArraySchemaDescriptionV2"
              },
              {
                "$ref": "#/components/schemas/EnumSchemaDescriptionV2"
              },
              {
                "$ref": "#/components/schemas/ObjectSchemaDescriptionV2"
              },
              {
                "$ref": "#/components/schemas/MapSchemaDescriptionV2"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BaseInterfaceContentDescriptionModel": {
        "required": [
          "@type",
          "name"
        ],
        "type": "object",
        "properties": {
          "@id": {
            "type": "string",
            "description": "The id of the self description\r\nThis can get assigned by demeter if not set",
            "nullable": true
          },
          "@type": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The type of self description",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "description": "Potential comments",
            "nullable": true
          },
          "description": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "A description of the self description\r\nKey is the language e.g. en (default)",
            "nullable": true
          },
          "displayName": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Display name of the self description\r\nKey is the language e.g. en (default)",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name which needs to unique within the Interface\r\nIs not the user friendly name ! (Does not support whitespaces for example)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Base class for all interface contents"
      },
      "BaseInterfaceContentDescriptionV2": {
        "type": "object",
        "properties": {
          "@id": {
            "type": "string",
            "nullable": true
          },
          "@type": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "displayName": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BaseSchemaSelfDescriptionModel": {
        "type": "object",
        "properties": {
          "@id": {
            "type": "string",
            "description": "The id of the self description\r\nThis can get assigned by demeter if not set",
            "nullable": true
          },
          "@type": {
            "type": "string",
            "description": "The type of self description",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "description": "Potential comments",
            "nullable": true
          },
          "description": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "A description of the self description\r\nKey is the language e.g. en (default)",
            "nullable": true
          },
          "displayName": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Display name of the self description\r\nKey is the language e.g. en (default)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Base of DTDL descriptions"
      },
      "BaseSchemaSelfDescriptionV2": {
        "type": "object",
        "properties": {
          "@id": {
            "type": "string",
            "nullable": true
          },
          "@type": {
            "type": "string",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "displayName": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Co2FootprintCalculationHeaderModel": {
        "type": "object",
        "properties": {
          "productModelId": {
            "type": "string",
            "description": "",
            "format": "uuid"
          },
          "productPassportId": {
            "type": "string",
            "description": "",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "Carbon Footprint Declaration"
      },
      "Co2FootprintCategory": {
        "enum": [
          "None",
          "RawMaterialAcquisitionAndPreProcessing",
          "MainProductProduction",
          "DistributionPointOfSale",
          "EndOfLifeAndRecycling",
          "ProductUsage"
        ],
        "type": "string"
      },
      "CommandDescriptionV2": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseInterfaceContentDescriptionV2"
          }
        ],
        "properties": {
          "request": {
            "$ref": "#/components/schemas/CommandRequestDescriptionV2"
          },
          "response": {
            "$ref": "#/components/schemas/CommandResponseDescriptionV2"
          }
        },
        "additionalProperties": false
      },
      "CommandRequestDescriptionV2": {
        "type": "object",
        "properties": {
          "@id": {
            "type": "string",
            "nullable": true
          },
          "@type": {
            "type": "string",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "displayName": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "nullable": {
            "type": "boolean",
            "nullable": true
          },
          "schema": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BaseSchemaSelfDescriptionV2"
              },
              {
                "$ref": "#/components/schemas/PrimitiveSchemaDescriptionV2"
              },
              {
                "$ref": "#/components/schemas/ArraySchemaDescriptionV2"
              },
              {
                "$ref": "#/components/schemas/EnumSchemaDescriptionV2"
              },
              {
                "$ref": "#/components/schemas/ObjectSchemaDescriptionV2"
              },
              {
                "$ref": "#/components/schemas/MapSchemaDescriptionV2"
              }
            ],
            "nullable": true
          },
          "unit": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CommandResponseDescriptionV2": {
        "type": "object",
        "properties": {
          "@id": {
            "type": "string",
            "nullable": true
          },
          "@type": {
            "type": "string",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "displayName": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "nullable": {
            "type": "boolean",
            "nullable": true
          },
          "schema": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BaseSchemaSelfDescriptionV2"
              },
              {
                "$ref": "#/components/schemas/PrimitiveSchemaDescriptionV2"
              },
              {
                "$ref": "#/components/schemas/ArraySchemaDescriptionV2"
              },
              {
                "$ref": "#/components/schemas/EnumSchemaDescriptionV2"
              },
              {
                "$ref": "#/components/schemas/ObjectSchemaDescriptionV2"
              },
              {
                "$ref": "#/components/schemas/MapSchemaDescriptionV2"
              }
            ],
            "nullable": true
          },
          "unit": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ComponentDescriptionV2": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseInterfaceContentDescriptionV2"
          }
        ],
        "properties": {
          "schema": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConfigurationDto": {
        "type": "object",
        "properties": {
          "productDesignConfiguration": {
            "$ref": "#/components/schemas/DesignConfigurationDto"
          }
        },
        "additionalProperties": false
      },
      "CreateGroupCommand": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 30,
            "minLength": 1,
            "type": "string",
            "description": "The group name.",
            "example": "Sample Customer"
          }
        },
        "additionalProperties": false,
        "description": "Command for creation of group."
      },
      "CreateUserCommand": {
        "required": [
          "email",
          "firstName",
          "groups",
          "lastName",
          "role"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "The first name of the user.",
            "readOnly": true,
            "example": "John"
          },
          "lastName": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "The last name of the user.",
            "readOnly": true,
            "example": "Doe"
          },
          "role": {
            "minLength": 1,
            "type": "string",
            "description": "The role of the user.",
            "readOnly": true,
            "example": "Admin"
          },
          "groups": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "List of group (identifiers) the user belongs to.",
            "readOnly": true,
            "example": [
              1
            ]
          },
          "email": {
            "maxLength": 320,
            "minLength": 1,
            "type": "string",
            "description": "Email (and username) of the user.",
            "example": "user@samplecustomer.com"
          }
        },
        "additionalProperties": false,
        "description": "Command for creation of User."
      },
      "DataModelDtmInformation": {
        "type": "object",
        "properties": {
          "productDiscriminator": {
            "$ref": "#/components/schemas/ProductDiscriminator"
          },
          "reviewStatus": {
            "$ref": "#/components/schemas/ProductModelDtmStatus"
          },
          "productDtmi": {
            "type": "string",
            "description": "Digital Twin Model Identifier associated to the Product Type",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name of the Digital Twin Model (DTM)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Product Digital Twin Model Information"
      },
      "DataModelListItemModel": {
        "type": "object",
        "properties": {
          "dataModelId": {
            "type": "string",
            "description": "Data Model Identifier",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Data Model Name",
            "nullable": true
          },
          "productCategory": {
            "$ref": "#/components/schemas/ProductCategoryModel"
          },
          "reviewStatus": {
            "$ref": "#/components/schemas/DataModelReviewStatus"
          },
          "lastUpdated": {
            "type": "string",
            "description": "Last Update TimeStamp",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Data Model Information"
      },
      "DataModelListItemModelPaginatedList": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataModelListItemModel"
            },
            "nullable": true
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "hasPreviousPage": {
            "type": "boolean",
            "readOnly": true
          },
          "hasNextPage": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DataModelModel": {
        "type": "object",
        "properties": {
          "dataModelId": {
            "type": "string",
            "description": "Data Model Identifier",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Data Model Name",
            "nullable": true
          },
          "productCategory": {
            "$ref": "#/components/schemas/ProductCategoryModel"
          },
          "reviewStatus": {
            "$ref": "#/components/schemas/DataModelReviewStatus"
          },
          "productTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataModelDtmInformation"
            },
            "description": "Get Information about the associated DataModels",
            "nullable": true
          },
          "validationGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataModelValidationGroupInformation"
            },
            "description": "Get Information about the associated ValidationGroups",
            "nullable": true
          },
          "dataViews": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductModelDataViewsInformation"
            },
            "description": "Get Information about the associated Data Views",
            "nullable": true
          },
          "lastUpdated": {
            "type": "string",
            "description": "Timestamp for the last update",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Data Model"
      },
      "DataModelReviewStatus": {
        "enum": [
          "Unknown",
          "Draft",
          "Approved"
        ],
        "type": "string"
      },
      "DataModelValidationGroupInformation": {
        "type": "object",
        "properties": {
          "validationGroupId": {
            "type": "string",
            "description": "Validation GroupId",
            "format": "uuid"
          },
          "productDiscriminator": {
            "$ref": "#/components/schemas/ProductDiscriminator"
          },
          "reviewStatus": {
            "$ref": "#/components/schemas/ProductModelValidationGroupStatus"
          }
        },
        "additionalProperties": false,
        "description": "Data Model Validation Group Information"
      },
      "DataViewAttributeInstanceModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the Attribute",
            "nullable": true
          },
          "attributeSorting": {
            "type": "integer",
            "description": "UI Sorting Position",
            "format": "int32"
          },
          "propertyDTMI": {
            "type": "string",
            "description": "Property Id",
            "nullable": true
          },
          "propertyName": {
            "type": "string",
            "description": "Property Name",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Data View Attribute"
      },
      "DataViewCategoryInstanceModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the Category",
            "nullable": true
          },
          "categorySorting": {
            "type": "integer",
            "description": "UI Sorting Position",
            "format": "int32"
          },
          "dataViewGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataViewGroupInstanceModel"
            },
            "description": "Groups associated with a Category",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Data View Category Name"
      },
      "DataViewCompactModel": {
        "type": "object",
        "properties": {
          "dataViewId": {
            "type": "string",
            "description": "Digital Twin Instance Id",
            "format": "uuid"
          },
          "productModelReviewStatus": {
            "$ref": "#/components/schemas/ProductDataViewStatus"
          }
        },
        "additionalProperties": false,
        "description": "Compact information of common properties of all views"
      },
      "DataViewConfigurationInstanceModel": {
        "type": "object",
        "properties": {
          "dataViewConfigurationId": {
            "type": "string",
            "description": "Data View Identifier",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Data View Configuration Name",
            "nullable": true
          },
          "dataViewCategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataViewCategoryInstanceModel"
            },
            "description": "Data View Categories associated with this Data View Configuration",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Data View Configuration Configuration"
      },
      "DataViewConfigurationInstanceViewModel": {
        "type": "object",
        "properties": {
          "view": {
            "$ref": "#/components/schemas/DataViewConfigurationInstanceModel"
          },
          "digitalTwins": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DigitalTwinModel"
            },
            "description": "Digital Twin Instances for the DataView",
            "nullable": true
          },
          "productModelStatus": {
            "$ref": "#/components/schemas/ProductModelConfigurationDataViewStatusViewModel"
          }
        },
        "additionalProperties": false,
        "description": "Data View Configuration Instance Representation"
      },
      "DataViewConfigurationModel": {
        "type": "object",
        "properties": {
          "dataViewId": {
            "type": "string",
            "description": "DataView Id",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Name of the Data View",
            "nullable": true
          },
          "reviewStatus": {
            "$ref": "#/components/schemas/ProductDataViewStatus"
          },
          "graphModel": {
            "$ref": "#/components/schemas/TwinGraphModel"
          }
        },
        "additionalProperties": false,
        "description": "Data View for Configurations"
      },
      "DataViewGroupInstanceModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the Group",
            "nullable": true
          },
          "groupSorting": {
            "type": "integer",
            "description": "UI Sorting Position",
            "format": "int32"
          },
          "dataViewGroupAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataViewAttributeInstanceModel"
            },
            "description": "Attributes associated with a Group",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Data View Group"
      },
      "DataViewPassportConfigurationInstanceModel": {
        "type": "object",
        "properties": {
          "dataViewPassportId": {
            "type": "string",
            "description": "DataView Passport Identifier",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "DataView Passport Name",
            "nullable": true
          },
          "configurationName": {
            "type": "string",
            "description": "DataView Passport Configuration Name",
            "nullable": true
          },
          "dataViewCategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataViewCategoryInstanceModel"
            },
            "description": "Categories associated with the DataView",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Data View Passport Instance"
      },
      "DataViewPassportConfigurationType": {
        "enum": [
          "None",
          "Private",
          "Public"
        ],
        "type": "string"
      },
      "DataViewPassportInstanceViewModel": {
        "type": "object",
        "properties": {
          "view": {
            "$ref": "#/components/schemas/DataViewPassportConfigurationInstanceModel"
          },
          "digitalTwins": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DigitalTwinModel"
            },
            "description": "Digital Twin Instances",
            "nullable": true
          },
          "productPassportStatus": {
            "$ref": "#/components/schemas/ProductPassportStatusViewModel"
          }
        },
        "additionalProperties": false,
        "description": "Data View Passport Instance Representation"
      },
      "DesignConfigurationDto": {
        "type": "object",
        "properties": {
          "hasCustomDesign": {
            "type": "boolean"
          },
          "primaryColorHexCode": {
            "type": "string",
            "nullable": true
          },
          "secondaryColorHexCode": {
            "type": "string",
            "nullable": true
          },
          "headerTextColorHexCode": {
            "type": "string",
            "nullable": true
          },
          "textComponentColorHexCode": {
            "type": "string",
            "nullable": true
          },
          "productPassportBadgeColorHexCode": {
            "type": "string",
            "nullable": true
          },
          "primaryGradient": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DigitalTwinMetadataModel": {
        "type": "object",
        "properties": {
          "$model": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DigitalTwinModel": {
        "type": "object",
        "properties": {
          "$dtId": {
            "type": "string",
            "format": "uuid"
          },
          "$etag": {
            "type": "string",
            "nullable": true
          },
          "$metadata": {
            "$ref": "#/components/schemas/DigitalTwinMetadataModel"
          }
        },
        "additionalProperties": { }
      },
      "DigitalTwinModelDefinitionsQuery": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "partialDtmis": {
            "type": "string",
            "description": "Enable Search for Digital Twin Model Identifier (DTMI) multiple Versions etc",
            "nullable": true
          },
          "systemDtmTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SystemDtmTypes"
            },
            "description": "Filter for specific DTM Types (null or empty disables the filter)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DTM Query Filter"
      },
      "DigitalTwinModelExtendedInterfaceQuery": {
        "required": [
          "dtmis"
        ],
        "type": "object",
        "properties": {
          "dtmis": {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Digital Twin Model Identifier"
          }
        },
        "additionalProperties": false,
        "description": "Filter Digital Twin Model Definitions based on the Id"
      },
      "DqrProductCarbonFootprintDataCategoryPrivateModel": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/ValueWithUnit"
          },
          "dataShare": {
            "$ref": "#/components/schemas/ValueWithUnit"
          }
        },
        "additionalProperties": false,
        "description": "Data Category Details"
      },
      "DqrProductCarbonFootprintPrivateModel": {
        "type": "object",
        "properties": {
          "total": {
            "$ref": "#/components/schemas/ValueWithUnit"
          },
          "primary": {
            "$ref": "#/components/schemas/DqrProductCarbonFootprintDataCategoryPrivateModel"
          },
          "secondary": {
            "$ref": "#/components/schemas/DqrProductCarbonFootprintDataCategoryPrivateModel"
          }
        },
        "additionalProperties": false,
        "description": "Data Quality Rating Product Carbon Footprint"
      },
      "EnumSchemaDescriptionV2": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseSchemaSelfDescriptionV2"
          }
        ],
        "properties": {
          "enumValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnumValueDescriptionV2"
            },
            "nullable": true
          },
          "valueSchema": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EnumValueDescriptionV2": {
        "type": "object",
        "properties": {
          "@id": {
            "type": "string",
            "nullable": true
          },
          "@type": {
            "type": "string",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "displayName": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "enumValue": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FieldDescriptionV2": {
        "type": "object",
        "properties": {
          "@id": {
            "type": "string",
            "nullable": true
          },
          "@type": {
            "type": "string",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "displayName": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "schema": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BaseSchemaSelfDescriptionV2"
              },
              {
                "$ref": "#/components/schemas/PrimitiveSchemaDescriptionV2"
              },
              {
                "$ref": "#/components/schemas/ArraySchemaDescriptionV2"
              },
              {
                "$ref": "#/components/schemas/EnumSchemaDescriptionV2"
              },
              {
                "$ref": "#/components/schemas/ObjectSchemaDescriptionV2"
              },
              {
                "$ref": "#/components/schemas/MapSchemaDescriptionV2"
              }
            ],
            "nullable": true
          },
          "unit": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetGroupsWithPaginationQuery": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Query groups (as paginated list order by group name)."
      },
      "GetUsersWithPaginationQuery": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Query users (as paginated list order by username/email)."
      },
      "GroupDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The id of the group.",
            "format": "int32",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "The name of the group.",
            "nullable": true,
            "example": "Sample Group"
          }
        },
        "additionalProperties": false,
        "description": "Group."
      },
      "GroupDtoPaginatedList": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupDto"
            },
            "nullable": true
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "hasPreviousPage": {
            "type": "boolean",
            "readOnly": true
          },
          "hasNextPage": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GuidIdentifierResponse": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "InterfaceDescriptionModel": {
        "required": [
          "@id"
        ],
        "type": "object",
        "properties": {
          "@context": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The DTDL context",
            "nullable": true
          },
          "@id": {
            "type": "string",
            "description": "The id of the self description\r\nThis can get assigned by demeter if not set",
            "nullable": true
          },
          "@type": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The type of self description",
            "nullable": true
          },
          "extends": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The interfaces that this interface extends",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "description": "Potential comments",
            "nullable": true
          },
          "description": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "A description of the self description\r\nKey is the language e.g. en (default)",
            "nullable": true
          },
          "displayName": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Display name of the self description\r\nKey is the language e.g. en (default)",
            "nullable": true
          },
          "contents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseInterfaceContentDescriptionModel"
            },
            "description": "The content of the interface",
            "nullable": true
          },
          "schemas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseSchemaSelfDescriptionModel"
            },
            "description": "The schemas that are used in the interface",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Description of an interface"
      },
      "InterfaceDescriptionV2": {
        "required": [
          "@context",
          "@id",
          "@type",
          "extends"
        ],
        "type": "object",
        "properties": {
          "@context": {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "@id": {
            "type": "string"
          },
          "@type": {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "extends": {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "displayName": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "contents": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/BaseInterfaceContentDescriptionV2"
                },
                {
                  "$ref": "#/components/schemas/PropertyDescriptionV2"
                },
                {
                  "$ref": "#/components/schemas/RelationshipDescriptionV2"
                },
                {
                  "$ref": "#/components/schemas/CommandDescriptionV2"
                },
                {
                  "$ref": "#/components/schemas/TelemetryDescriptionV2"
                },
                {
                  "$ref": "#/components/schemas/ComponentDescriptionV2"
                }
              ]
            },
            "nullable": true
          },
          "schemas": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/BaseSchemaSelfDescriptionV2"
                },
                {
                  "$ref": "#/components/schemas/PrimitiveSchemaDescriptionV2"
                },
                {
                  "$ref": "#/components/schemas/ArraySchemaDescriptionV2"
                },
                {
                  "$ref": "#/components/schemas/EnumSchemaDescriptionV2"
                },
                {
                  "$ref": "#/components/schemas/ObjectSchemaDescriptionV2"
                },
                {
                  "$ref": "#/components/schemas/MapSchemaDescriptionV2"
                }
              ]
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InterfaceDescriptionV2PaginatedList": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InterfaceDescriptionV2"
            },
            "nullable": true
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "hasPreviousPage": {
            "type": "boolean",
            "readOnly": true
          },
          "hasNextPage": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "LifeCycleStatus": {
        "enum": [
          "Original",
          "Repurposed",
          "Reused",
          "ReManufactured",
          "Waste"
        ],
        "type": "string"
      },
      "LifeCycleUpdateRequestModel": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/LifeCycleStatus"
          }
        },
        "additionalProperties": false
      },
      "MapKeyDescriptionV2": {
        "type": "object",
        "properties": {
          "@id": {
            "type": "string",
            "nullable": true
          },
          "@type": {
            "type": "string",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "displayName": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "schema": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MapSchemaDescriptionV2": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseSchemaSelfDescriptionV2"
          }
        ],
        "properties": {
          "mapKey": {
            "$ref": "#/components/schemas/MapKeyDescriptionV2"
          },
          "mapValue": {
            "$ref": "#/components/schemas/MapValueDescriptionV2"
          }
        },
        "additionalProperties": false
      },
      "MapValueDescriptionV2": {
        "type": "object",
        "properties": {
          "@id": {
            "type": "string",
            "nullable": true
          },
          "@type": {
            "type": "string",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "displayName": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "schema": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BaseSchemaSelfDescriptionV2"
              },
              {
                "$ref": "#/components/schemas/PrimitiveSchemaDescriptionV2"
              },
              {
                "$ref": "#/components/schemas/ArraySchemaDescriptionV2"
              },
              {
                "$ref": "#/components/schemas/EnumSchemaDescriptionV2"
              },
              {
                "$ref": "#/components/schemas/ObjectSchemaDescriptionV2"
              },
              {
                "$ref": "#/components/schemas/MapSchemaDescriptionV2"
              }
            ],
            "nullable": true
          },
          "unit": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NotarizationInformationModel": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/NotarizationState"
          },
          "storedAt": {
            "type": "string",
            "description": "Datetime the Proof was stored",
            "format": "date-time",
            "nullable": true
          },
          "rootHash": {
            "type": "string",
            "description": "RootHash of the Proof",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Notarization Information about a Digital Twin Instance"
      },
      "NotarizationState": {
        "enum": [
          "Unknown",
          "Triggered",
          "Pending",
          "Failed",
          "Success"
        ],
        "type": "string"
      },
      "NotarizationVerificationStatus": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/ProofStatus"
          },
          "resultMessage": {
            "type": "string",
            "description": "Human readable message for the proof state",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Notarization Verification Result"
      },
      "ObjectSchemaDescriptionV2": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseSchemaSelfDescriptionV2"
          }
        ],
        "properties": {
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FieldDescriptionV2"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PrimitiveSchemaDescriptionV2": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseSchemaSelfDescriptionV2"
          }
        ],
        "properties": {
          "primitiveSchema": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "ProductCarbonFootprintPrivateModel": {
        "type": "object",
        "properties": {
          "co2FootprintCategory": {
            "$ref": "#/components/schemas/Co2FootprintCategory"
          },
          "carbonFootprint": {
            "$ref": "#/components/schemas/ValueWithUnit"
          },
          "lifeCycleCarbonFootprint": {
            "$ref": "#/components/schemas/ValueWithUnit"
          },
          "categoryValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PropertyValueWithUnit"
            },
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Carbon Category Footprint"
      },
      "ProductCarbonFootprintPublicModel": {
        "type": "object",
        "properties": {
          "co2FootprintCategory": {
            "$ref": "#/components/schemas/Co2FootprintCategory"
          },
          "lifeCycleCarbonFootprint": {
            "$ref": "#/components/schemas/ValueWithUnit"
          }
        },
        "additionalProperties": false,
        "description": "Carbon Category Footprint"
      },
      "ProductCarbonPrivateModel": {
        "type": "object",
        "properties": {
          "totalFootprint": {
            "$ref": "#/components/schemas/ProductCarbonSummaryFootprintPrivateModel"
          },
          "categoryCarbonFootprints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductCarbonFootprintPrivateModel"
            },
            "description": "Footprint details for each category",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Product Carbon Footprint"
      },
      "ProductCarbonPublicModel": {
        "type": "object",
        "properties": {
          "totalFootprint": {
            "$ref": "#/components/schemas/ProductCarbonSummaryFootprintPublicModel"
          },
          "categoryCarbonFootprints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductCarbonFootprintPublicModel"
            },
            "description": "Footprint details for each category",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Product Carbon Footprint"
      },
      "ProductCarbonSummaryFootprintPrivateModel": {
        "type": "object",
        "properties": {
          "carbonFootprint": {
            "$ref": "#/components/schemas/ValueWithUnit"
          },
          "lifeCycleCarbonFootprint": {
            "$ref": "#/components/schemas/ValueWithUnit"
          }
        },
        "additionalProperties": false,
        "description": "Total Carbon Footprint"
      },
      "ProductCarbonSummaryFootprintPublicModel": {
        "type": "object",
        "properties": {
          "lifeCycleCarbonFootprint": {
            "$ref": "#/components/schemas/ValueWithUnit"
          }
        },
        "additionalProperties": false,
        "description": "Total Carbon Footprint"
      },
      "ProductCategoryModel": {
        "type": "object",
        "properties": {
          "productCategoryId": {
            "type": "string",
            "description": "Identifier",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Name",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Product Category Identifier"
      },
      "ProductCategoryModelPaginatedList": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductCategoryModel"
            },
            "nullable": true
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "hasPreviousPage": {
            "type": "boolean",
            "readOnly": true
          },
          "hasNextPage": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ProductConfigurationViewModel": {
        "type": "object",
        "properties": {
          "dataViewConfigurationDtmi": {
            "type": "string",
            "description": "Data View Configuration Digital Twin Model Identifier",
            "nullable": true
          },
          "viewModel": {
            "$ref": "#/components/schemas/DataViewConfigurationInstanceModel"
          }
        },
        "additionalProperties": false,
        "description": "Product Configuration View Model"
      },
      "ProductDataViewStatus": {
        "enum": [
          "Unknown",
          "Draft",
          "Approved"
        ],
        "type": "string"
      },
      "ProductDiscriminator": {
        "enum": [
          "Unknown",
          "ProductModel",
          "ProductPassport"
        ],
        "type": "string"
      },
      "ProductModelConfigurationDataViewStatusViewModel": {
        "type": "object",
        "properties": {
          "reviewStatus": {
            "$ref": "#/components/schemas/ProductModelReviewStatus"
          },
          "validationStatus": {
            "$ref": "#/components/schemas/ProductModelValidationStatus"
          },
          "proofStatus": {
            "$ref": "#/components/schemas/ProofStatus"
          }
        },
        "additionalProperties": false,
        "description": "Product Status Information"
      },
      "ProductModelDataViewsInformation": {
        "type": "object",
        "properties": {
          "dataViewId": {
            "type": "string",
            "description": "Data View Id",
            "format": "uuid"
          },
          "dataViewName": {
            "type": "string",
            "description": "Data View Name",
            "nullable": true
          },
          "reviewStatus": {
            "$ref": "#/components/schemas/ProductDataViewStatus"
          }
        },
        "additionalProperties": false,
        "description": "Data Model Data View Information"
      },
      "ProductModelDtmStatus": {
        "enum": [
          "Unknown",
          "Draft",
          "Approved"
        ],
        "type": "string"
      },
      "ProductModelListItemModel": {
        "type": "object",
        "properties": {
          "productModelId": {
            "type": "string",
            "description": "Product Model Identifier",
            "format": "uuid"
          },
          "dtmi": {
            "type": "string",
            "description": "Product Model Digital Twin Model Identifier",
            "nullable": true
          },
          "productModelReviewStatus": {
            "$ref": "#/components/schemas/ProductModelReviewStatus"
          },
          "validationStatus": {
            "$ref": "#/components/schemas/ProductModelValidationStatus"
          },
          "proofStatus": {
            "$ref": "#/components/schemas/ProofStatus"
          },
          "articleNumber": {
            "type": "string",
            "description": "Product Model Article Number",
            "nullable": true
          },
          "lastUpdated": {
            "type": "string",
            "description": "Product Model last update",
            "format": "date-time"
          },
          "isPubliclyAvailable": {
            "type": "boolean",
            "description": "Product Model is available for the public"
          }
        },
        "additionalProperties": false,
        "description": "Product Model List Item"
      },
      "ProductModelListItemModelPaginatedList": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductModelListItemModel"
            },
            "nullable": true
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "hasPreviousPage": {
            "type": "boolean",
            "readOnly": true
          },
          "hasNextPage": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ProductModelReviewStatus": {
        "enum": [
          "Unknown",
          "Draft",
          "ReadyForReview",
          "NotarizationInProgress",
          "Approved"
        ],
        "type": "string"
      },
      "ProductModelValidationGroupStatus": {
        "enum": [
          "Unknown",
          "Draft",
          "Approved"
        ],
        "type": "string"
      },
      "ProductModelValidationStatus": {
        "enum": [
          "Unknown",
          "Failed",
          "Success"
        ],
        "type": "string"
      },
      "ProductPassportCo2FootPrintCalculationPrivateModel": {
        "type": "object",
        "properties": {
          "headerModel": {
            "$ref": "#/components/schemas/Co2FootprintCalculationHeaderModel"
          },
          "productCarbonFootprint": {
            "$ref": "#/components/schemas/ProductCarbonPrivateModel"
          },
          "dqrFootprint": {
            "$ref": "#/components/schemas/DqrProductCarbonFootprintPrivateModel"
          }
        },
        "additionalProperties": false,
        "description": "Private representation of the CO2 Footprint Calculation Result"
      },
      "ProductPassportCo2FootPrintCalculationPublicModel": {
        "type": "object",
        "properties": {
          "headerModel": {
            "$ref": "#/components/schemas/Co2FootprintCalculationHeaderModel"
          },
          "productCarbonFootprint": {
            "$ref": "#/components/schemas/ProductCarbonPublicModel"
          }
        },
        "additionalProperties": false,
        "description": "Public representation of the CO2 Footprint Calculation Result"
      },
      "ProductPassportListItemModel": {
        "type": "object",
        "properties": {
          "productCategoryId": {
            "type": "string",
            "description": "Product Category Identifier",
            "format": "uuid"
          },
          "dataModelId": {
            "type": "string",
            "description": "Data Model Identifier",
            "format": "uuid"
          },
          "productModelId": {
            "type": "string",
            "description": "Product Model Identifier",
            "format": "uuid"
          },
          "productModelName": {
            "type": "string",
            "description": "Product Model Name",
            "nullable": true
          },
          "productPassportId": {
            "type": "string",
            "description": "Product Passport Identifier",
            "format": "uuid"
          },
          "dtmi": {
            "type": "string",
            "description": "Digital Twin Model Identifier (DTMI)",
            "nullable": true
          },
          "productPassportReviewStatus": {
            "$ref": "#/components/schemas/ProductPassportReviewStatus"
          },
          "proofStatus": {
            "$ref": "#/components/schemas/ProofStatus"
          },
          "lifeCycleStatus": {
            "$ref": "#/components/schemas/LifeCycleStatus"
          },
          "validationStatus": {
            "$ref": "#/components/schemas/ProductPassportValidationStatus"
          },
          "serialNumber": {
            "type": "string",
            "description": "Product Passport Serial Number",
            "nullable": true
          },
          "lastUpdated": {
            "type": "string",
            "description": "Product Passport Last Change DateTime",
            "format": "date-time"
          },
          "productionDate": {
            "type": "string",
            "description": "Product Passport Production Date",
            "format": "date"
          },
          "isQrCodeAvailable": {
            "type": "boolean",
            "description": "Product Passport QrCode Available"
          },
          "isPublicAvailable": {
            "type": "boolean",
            "description": "Product Model is available for the public"
          }
        },
        "additionalProperties": false,
        "description": "Product Passport List Item"
      },
      "ProductPassportListItemModelPaginatedList": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductPassportListItemModel"
            },
            "nullable": true
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "hasPreviousPage": {
            "type": "boolean",
            "readOnly": true
          },
          "hasNextPage": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ProductPassportQrCodeModel": {
        "type": "object",
        "properties": {
          "size": {
            "type": "integer",
            "description": "",
            "format": "int32"
          },
          "qrCodeQualityLevel": {
            "$ref": "#/components/schemas/QrCodeQualityLevel"
          },
          "mimeType": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "data": {
            "type": "string",
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Qr Code"
      },
      "ProductPassportReviewStatus": {
        "enum": [
          "Unknown",
          "Draft",
          "ReadyForReview",
          "NotarizationInProgress",
          "Approved",
          "PlacedOnMarket"
        ],
        "type": "string"
      },
      "ProductPassportStatusViewModel": {
        "type": "object",
        "properties": {
          "reviewStatus": {
            "$ref": "#/components/schemas/ProductPassportReviewStatus"
          },
          "validationStatus": {
            "$ref": "#/components/schemas/ProductPassportValidationStatus"
          },
          "proofStatus": {
            "$ref": "#/components/schemas/ProofStatus"
          }
        },
        "additionalProperties": false,
        "description": "Product Status Information"
      },
      "ProductPassportValidationStatus": {
        "enum": [
          "Unknown",
          "Failed",
          "Success"
        ],
        "type": "string"
      },
      "ProofStatus": {
        "enum": [
          "Unknown",
          "Failed",
          "Success"
        ],
        "type": "string"
      },
      "PropertyDescriptionV2": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseInterfaceContentDescriptionV2"
          }
        ],
        "properties": {
          "schema": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BaseSchemaSelfDescriptionV2"
              },
              {
                "$ref": "#/components/schemas/PrimitiveSchemaDescriptionV2"
              },
              {
                "$ref": "#/components/schemas/ArraySchemaDescriptionV2"
              },
              {
                "$ref": "#/components/schemas/EnumSchemaDescriptionV2"
              },
              {
                "$ref": "#/components/schemas/ObjectSchemaDescriptionV2"
              },
              {
                "$ref": "#/components/schemas/MapSchemaDescriptionV2"
              }
            ],
            "nullable": true
          },
          "unit": {
            "type": "string",
            "nullable": true
          },
          "writable": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PropertyValueWithUnit": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "value": {
            "type": "number",
            "description": "",
            "format": "double"
          },
          "unit": {
            "type": "string",
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a Calculation Point with a Name"
      },
      "QrCodeQualityLevel": {
        "enum": [
          0,
          1,
          2,
          3,
          -1
        ],
        "type": "integer",
        "format": "int32"
      },
      "RelationshipDescriptionV2": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseInterfaceContentDescriptionV2"
          }
        ],
        "properties": {
          "maxMultiplicity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "minMultiplicity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PropertyDescriptionV2"
            },
            "nullable": true
          },
          "target": {
            "type": "string",
            "nullable": true
          },
          "writable": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RelationshipModel": {
        "type": "object",
        "properties": {
          "$relationshipId": {
            "type": "string",
            "format": "uuid"
          },
          "$etag": {
            "type": "string",
            "nullable": true
          },
          "$sourceId": {
            "type": "string",
            "format": "uuid"
          },
          "$targetId": {
            "type": "string",
            "format": "uuid"
          },
          "$relationshipName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "StringPaginatedList": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "hasPreviousPage": {
            "type": "boolean",
            "readOnly": true
          },
          "hasNextPage": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SystemDtmTypes": {
        "enum": [
          "Unknown",
          "BaseProductModel",
          "BaseProductPassport",
          "BaseConfigurationView",
          "BasePassportView",
          "ValidationRules",
          "Components",
          "GraphDataViewPassport",
          "GraphDataViewConfiguration",
          "GraphValidator"
        ],
        "type": "string"
      },
      "TelemetryDescriptionV2": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseInterfaceContentDescriptionV2"
          }
        ],
        "properties": {
          "schema": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BaseSchemaSelfDescriptionV2"
              },
              {
                "$ref": "#/components/schemas/PrimitiveSchemaDescriptionV2"
              },
              {
                "$ref": "#/components/schemas/ArraySchemaDescriptionV2"
              },
              {
                "$ref": "#/components/schemas/EnumSchemaDescriptionV2"
              },
              {
                "$ref": "#/components/schemas/ObjectSchemaDescriptionV2"
              },
              {
                "$ref": "#/components/schemas/MapSchemaDescriptionV2"
              }
            ],
            "nullable": true
          },
          "unit": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TwinGraphModel": {
        "type": "object",
        "properties": {
          "digitalTwins": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DigitalTwinModel"
            },
            "nullable": true
          },
          "relationships": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateDataModelModel": {
        "type": "object",
        "properties": {
          "productCategoryId": {
            "type": "string",
            "description": "Product Category Identifier",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Data Model Name",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Data Model"
      },
      "UpdateDataViewPassportModel": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/DataViewPassportConfigurationType"
          },
          "graphModel": {
            "$ref": "#/components/schemas/TwinGraphModel"
          }
        },
        "additionalProperties": false,
        "description": "Data View for Passports"
      },
      "UpdateGroupCommand": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 30,
            "minLength": 1,
            "type": "string",
            "description": "The group name.",
            "example": "Sample Customer"
          },
          "id": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "The id of the group.",
            "format": "int32",
            "example": 1
          }
        },
        "additionalProperties": false,
        "description": "Command for update of group."
      },
      "UpdateProductCategoryModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Unique Name for a Product Category",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Product Category"
      },
      "UpdateProductPublicAccessModel": {
        "type": "object",
        "properties": {
          "isPublicAccessGranted": {
            "type": "boolean",
            "description": "True if the Product Passport is public accessible"
          }
        },
        "additionalProperties": false,
        "description": "Change the Public Access for a Product Passport"
      },
      "UpdateUserCommand": {
        "required": [
          "firstName",
          "groups",
          "lastName",
          "role",
          "userId"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "The first name of the user.",
            "readOnly": true,
            "example": "John"
          },
          "lastName": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "The last name of the user.",
            "readOnly": true,
            "example": "Doe"
          },
          "role": {
            "minLength": 1,
            "type": "string",
            "description": "The role of the user.",
            "readOnly": true,
            "example": "Admin"
          },
          "groups": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "List of group (identifiers) the user belongs to.",
            "readOnly": true,
            "example": [
              1
            ]
          },
          "userId": {
            "minLength": 1,
            "type": "string",
            "description": "The id (uuid) of the user.",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "Command for update of User.\r\nThe user id will be used to match the user."
      },
      "UserDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "The id (uuid) of the user.",
            "nullable": true,
            "example": "dd45d927-22e6-4b86-8b4b-f41724f03374"
          },
          "email": {
            "type": "string",
            "description": "Email (and username) of the user.",
            "nullable": true,
            "example": "user@samplecustomer.com"
          },
          "firstName": {
            "type": "string",
            "description": "The first name of the user.",
            "nullable": true,
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "description": "The last name of the user.",
            "nullable": true,
            "example": "Doe"
          },
          "role": {
            "type": "string",
            "description": "The role of the user.",
            "nullable": true,
            "example": "SupportLevel3"
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupDto"
            },
            "description": "The groups the user belongs to.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "User."
      },
      "UserDtoPaginatedList": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserDto"
            },
            "nullable": true
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "hasPreviousPage": {
            "type": "boolean",
            "readOnly": true
          },
          "hasNextPage": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ValidationGroupModel": {
        "type": "object",
        "properties": {
          "validationGroupId": {
            "type": "string",
            "description": "Validation Group Id",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Name of the Validation Group",
            "nullable": true
          },
          "dtmiReference": {
            "type": "string",
            "description": "Digital Twin Model Identifier for the Validation Group Reference",
            "nullable": true
          },
          "productDiscriminator": {
            "$ref": "#/components/schemas/ProductDiscriminator"
          },
          "reviewStatus": {
            "$ref": "#/components/schemas/ProductModelValidationGroupStatus"
          },
          "validationGroupGraph": {
            "$ref": "#/components/schemas/TwinGraphModel"
          }
        },
        "additionalProperties": false,
        "description": "Validation Group Model"
      },
      "ValidationGroupUpdateModel": {
        "required": [
          "graphModel"
        ],
        "type": "object",
        "properties": {
          "productDiscriminator": {
            "$ref": "#/components/schemas/ProductDiscriminator"
          },
          "graphModel": {
            "$ref": "#/components/schemas/TwinGraphModel"
          }
        },
        "additionalProperties": false,
        "description": "Validation Group Model"
      },
      "ValidationProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "ValueWithUnit": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "description": "Property Value",
            "format": "double"
          },
          "unit": {
            "type": "string",
            "description": "Property Unit",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a Calculation Point"
      }
    },
    "securitySchemes": {
      "OAuth2": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "http://localhost:5081/realms/avl-passport/protocol/openid-connect/auth",
            "tokenUrl": "http://localhost:5081/realms/avl-passport/protocol/openid-connect/token",
            "scopes": {
              "openid": "openid"
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "OAuth2": [
        "openid"
      ]
    }
  ]
}